<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oopsw.seongsubean.board.repository.ReportBoardRepository">
  <insert id="addReportBoard" useGeneratedKeys="true" keyProperty="reportBoardId" parameterType="com.oopsw.seongsubean.board.dto.ReportBoardDTO">
    INSERT INTO REPORT_BOARD (TITLE, CONTENT, CREATED_DATE, EMAIL)
    VALUES (#{title}, #{content}, NOW(), #{email})
  </insert>
  <insert id="addReportBoardImages" parameterType="map">
    INSERT INTO REPORT_BOARD_IMAGE (IMAGE, REPORT_BOARD_ID)
    VALUES (#{image}, #{reportBoardId})
  </insert>
  <select id="getReportBoardList" resultType="com.oopsw.seongsubean.board.dto.ReportBoardDTO">
    SELECT
      r.REPORT_BOARD_ID AS reportBoardId,
      r.TITLE AS title,
      r.CONTENT AS content,
      r.CREATED_DATE AS createdDate,
      u.NICKNAME AS nickname,
      (SELECT i.IMAGE
       FROM REPORT_BOARD_IMAGE i
       WHERE i.REPORT_BOARD_ID = r.REPORT_BOARD_ID
       ORDER BY i.REPORT_BOARD_IMAGE_ID ASC
       LIMIT 1) AS thumbnailImage
    FROM REPORT_BOARD r
    LEFT JOIN USER_INFO u ON r.EMAIL = u.EMAIL
    ORDER BY r.CREATED_DATE DESC
    LIMIT #{size} OFFSET #{offset}
  </select>
  <select id="getReportBoardDetail" parameterType="int" resultType="com.oopsw.seongsubean.board.dto.ReportBoardDTO">
    SELECT r.REPORT_BOARD_ID AS reportBoardId,
           r.TITLE AS title,
           r.CONTENT AS content,
           r.CREATED_DATE AS createdDate,
           u.EMAIL AS email,
           u.IMAGE AS profileImage,
           u.NICKNAME AS nickName
    FROM REPORT_BOARD r
    JOIN USER_INFO u ON r.EMAIL = u.EMAIL
    WHERE r.REPORT_BOARD_ID = #{reportBoardId}
  </select>
  <select id="getReportBoardDetailImages" parameterType="int" resultType="String">
    SELECT IMAGE
    FROM REPORT_BOARD_IMAGE
    WHERE REPORT_BOARD_ID = #{reportBoardId}
  </select>
  <update id="setReportBoardDetail" parameterType="com.oopsw.seongsubean.board.dto.ReportBoardDTO">
    UPDATE REPORT_BOARD
    SET
      TITLE   = IF(#{title} IS NOT NULL, #{title}, TITLE),
      CONTENT = IF(#{content} IS NOT NULL, #{content}, CONTENT)
    WHERE REPORT_BOARD_ID = #{reportBoardId}
  </update>
  <delete id="removeReportBoard" parameterType="int">
    DELETE FROM REPORT_BOARD
    WHERE REPORT_BOARD_ID = #{reportBoardId}
  </delete>
  <delete id="removeReportBoardImages" parameterType="int">
    DELETE FROM REPORT_BOARD_IMAGE
    WHERE REPORT_BOARD_ID = #{reportBoardId}
  </delete>
  <select id="getReportBoardOwnerEmail" resultType="string" parameterType="int">
    SELECT EMAIL
    FROM REPORT_BOARD
    WHERE REPORT_BOARD_ID = #{reportBoardId}
  </select>
  <select id="getTotalReportBoardCount" resultType="int">
    SELECT COUNT(*) FROM REPORT_BOARD
  </select>
</mapper>
